context: home-cluster

settings:
  kubeContext: "rpi-cluster"
  globalMaxHistory: 3

# define your environments and their k8s namespaces
namespaces:
  media:
  ingress-nginx:
  external-dns:
  cert-manager:
  device-manager:
  democratic-csi:
  metallb-system:
    labels:
      app: metallb
  actions-runner-system:
  mysql-operator:
  mariadb-operator:
  nextcloud:
  vtt:
  pihole:
  zot:
  database:

helmRepos:
  k8s-at-home: "https://k8s-at-home.com/charts/"
  ingress-nginx: "https://kubernetes.github.io/ingress-nginx"
  bitnami: "https://charts.bitnami.com/bitnami"
  jetstack: "https://charts.jetstack.io"
  democratic-csi: "https://democratic-csi.github.io/charts/"
  metallb: "https://metallb.github.io/metallb"
  actions-runner-controller: "https://actions-runner-controller.github.io/actions-runner-controller"
  mysql-operator-arm64: "https://canozokur.github.io/mysql-operator/"
  nextcloud: https://nextcloud.github.io/helm/
  groundhog2k: https://groundhog2k.github.io/helm-charts/
  mariadb-operator: https://mariadb-operator.github.io/mariadb-operator
  foundry-vtt: https://hugoprudente.github.io/helm-charts/incubator/
  mojo2600: https://mojo2600.github.io/pihole-kubernetes/
  k8s-home-lab: https://k8s-home-lab.github.io/helm-charts/
  project-zot: https://zotregistry.dev/helm-charts

appsTemplates:
  adhoc: &adhoc
    valuesFile: ""
    namespace: ""
    enabled: true
    wait: true
    chart: charts/adhoc-object
    protected: false
    version: "0.0.1"

apps:
  zot:
    namespace: "zot"
    enabled: true
    wait: true
    chart: project-zot/zot
    version: "0.1.66"
    protected: false
    valuesFile: zot.yaml
    set:
      ingress.annotations.external-dns\.alpha\.kubernetes\.io/target: "$EXTERNAL_IP_PROXY"
      authHeader: "$ZOT_AUTH_HEADER"
    setFile:
      secretFiles.htpasswd: "zot/htpasswd"

  mariadb-operator:
    namespace: "mariadb-operator"
    group: mariadb-operator
    enabled: true
    wait: true
    chart: mariadb-operator/mariadb-operator
    version: "0.37.1"
    protected: false
    valuesFile: mariadb-operator.yaml

  mariadb-operator-crds:
    namespace: "mariadb-operator"
    group: mariadb-operator
    priority: -2
    enabled: true
    wait: true
    chart: mariadb-operator/mariadb-operator-crds
    version: "0.37.1"
    protected: false

  shared-mariadb:
    <<: *adhoc
    namespace: "database"
    valuesFile: plain-manifest/shared-mysql.yaml

  nextcloud-database:
    <<: *adhoc
    enabled: true
    namespace: "nextcloud"
    valuesFile: plain-manifest/nextcloud-database.yaml

  nextcloud-db-user:
    <<: *adhoc
    enabled: true
    namespace: "nextcloud"
    valuesFile: plain-manifest/nextcloud-db-user.yaml

  nextcloud-db-grant:
    <<: *adhoc
    enabled: true
    namespace: "nextcloud"
    valuesFile: plain-manifest/nextcloud-db-grant.yaml

  nextcloud:
    namespace: "nextcloud"
    enabled: true
    chart: nextcloud/nextcloud
    version: "4.0.0"
    protected: false
    valuesFile: nextcloud.yaml
    hooks:
      preInstall: hooks/preInstall/create-nextcloud-data-pvc.yaml
    set:
      nextcloud.password: "$NEXTCLOUD_ADMIN_PASS"
      externalDatabase.password: "$NEXTCLOUD_DB_PASSWORD"
      metrics.token: "$NEXTCLOUD_METRICS_TOKEN"
      nextcloud.mail.smtp.name: "$POSTMARK_SMTP_TOKEN"
      nextcloud.mail.smtp.password: "$POSTMARK_SMTP_TOKEN"
      nextcloud.extraEnv[0].name: "REDIS_HOST_PASSWORD"
      nextcloud.extraEnv[0].value: "$NEXTCLOUD_REDIS_PASSWORD"
      nextcloud.extraEnv[1].name: "REDIS_HOST"
      nextcloud.extraEnv[1].value: "nextcloud-redis"
      ingress.annotations.external-dns\.alpha\.kubernetes\.io/target: "$EXTERNAL_IP"

  nextcloud-redis:
    namespace: "nextcloud"
    enabled: true
    wait: true
    chart: groundhog2k/redis
    version: "0.5.8"
    protected: false
    valuesFile: nextcloud-redis.yaml
    set:
      redisConfig: "requirepass ${NEXTCLOUD_REDIS_PASSWORD}"

  actions-runner-controller:
    namespace: "actions-runner-system"
    enabled: true
    wait: true
    chart: actions-runner-controller/actions-runner-controller
    version: "0.21.0"
    protected: false
    valuesFile: actions-runner-controller.yaml
    set:
      githubWebhookServer.ingress.annotations.external-dns\.alpha\.kubernetes\.io/target: "$EXTERNAL_IP"

  metallb:
    namespace: "metallb-system"
    enabled: true
    chart: metallb/metallb
    version: "0.13.5"
    protected: false

  truenas-nfs:
    namespace: "democratic-csi"
    enabled: true
    chart: democratic-csi/democratic-csi
    version: "0.13.6"
    protected: false
    valuesFile: truenas-nfs.yaml
    set:
      driver.config.httpConnection.apiKey: "${TRUENAS_APIKEY}"
    setFile:
      # can't move this to .env, multiline gives me a headache
      driver.config.sshConnection.privateKey: ../certs/truenas
    group: truenas

  truenas-iscsi:
    namespace: "democratic-csi"
    enabled: true
    chart: democratic-csi/democratic-csi
    version: "0.13.6"
    protected: false
    valuesFile: truenas-iscsi.yaml
    set:
      driver.config.httpConnection.apiKey: "${TRUENAS_APIKEY}"
    setFile:
      # can't move this to .env, multiline gives me a headache
      driver.config.sshConnection.privateKey: ../certs/truenas
    group: truenas

  ingress-nginx:
    namespace: "ingress-nginx"
    enabled: true
    chart: ingress-nginx/ingress-nginx
    version: "4.7.0"
    protected: false
    valuesFile: ingress-nginx.yaml

  ingress-nginx-external:
    namespace: "ingress-nginx"
    enabled: true
    chart: ingress-nginx/ingress-nginx
    version: "4.7.0"
    protected: false
    valuesFile: external-ingress-nginx.yaml

  external-dns:
    namespace: "external-dns"
    enabled: true
    chart: bitnami/external-dns
    version: "6.11.2"
    protected: false
    valuesFile: external-dns.yaml

  cert-manager:
    namespace: cert-manager
    enabled: true
    chart: jetstack/cert-manager
    version: "1.7.1"
    protected: false
    valuesFile: cert-manager.yaml
    hooks:
      postInstall: hooks/postInstall/cert-manager.yaml

  flaresolverr:
    namespace: media
    enabled: true
    chart: k8s-at-home/flaresolverr
    version: "5.4.2"
    protected: false
    valuesFile: flaresolverr.yaml

  prowlarr:
    namespace: media
    enabled: true
    chart: k8s-at-home/prowlarr
    version: "4.2.0"
    protected: false
    valuesFile: prowlarr.yaml
    hooks:
      preInstall: hooks/preInstall/create-shared-pvc.yaml

  radarr:
    namespace: media
    enabled: true
    chart: k8s-at-home/radarr
    version: "16.0.1"
    protected: false
    valuesFile: radarr.yaml
    hooks:
      preInstall: hooks/preInstall/create-shared-pvc.yaml

  ombi:
    namespace: media
    enabled: true
    chart: k8s-at-home/ombi
    version: "11.2.0"
    protected: false
    valuesFile: ombi.yaml
    hooks:
      preInstall: hooks/preInstall/create-shared-pvc.yaml

  sonarr:
    namespace: media
    enabled: true
    chart: k8s-at-home/sonarr
    version: "16.0.1"
    protected: false
    valuesFile: sonarr.yaml
    hooks:
      preInstall: hooks/preInstall/create-shared-pvc.yaml

  unpackerr:
    namespace: media
    enabled: true
    chart: k8s-at-home/unpackerr
    version: "5.4.2"
    protected: false
    valuesFile: unpackerr.yaml
    set:
      env.UN_RADARR_0_API_KEY: "$UN_RADARR_0_API_KEY"
      env.UN_SONARR_0_API_KEY: "$UN_SONARR_0_API_KEY"

  foundry:
    namespace: vtt
    enabled: true
    chart: foundry-vtt/foundry-vtt
    version: "11.306.0"
    protected: false
    valuesFile: foundry.yaml
    set:
      foundryvtt.username: "$FOUNDRYVTT_USERNAME"
      foundryvtt.password: "$FOUNDRYVTT_PASSWORD"
      foundryvtt.licenseKey: "$FOUNDRYVTT_LICENSEKEY"
      foundryvtt.adminPassword: "$FOUNDRYVTT_ADMIN_PASSWORD"
      ingress.annotations.external-dns\.alpha\.kubernetes\.io/target: "$EXTERNAL_IP"

  pihole:
    namespace: pihole
    enabled: true
    chart: mojo2600/pihole
    version: "2.21.0"
    protected: false
    valuesFile: pihole.yaml
    set:
      adminPassword: "$PIHOLE_ADMIN_PASSWORD"
