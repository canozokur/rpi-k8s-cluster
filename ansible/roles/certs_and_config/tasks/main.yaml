---
- name: Set facts for components
  set_fact:
    k8s_services:
      - name: "admin"
        common_name: "admin"
        organization: "system:masters"
      - name: "kube-controller-manager"
        common_name: "system:kube-controller-manager"
        organization: "system:kube-controller-manager"
      - name: "kube-proxy"
        common_name: "system:kube-proxy"
        organization: "system:node-proxier"
      - name: "kube-scheduler"
        common_name: "system:kube-scheduler"
        organization: "system:kube-scheduler"
      - name: "kube-apiserver"
        common_name: "kubernetes"
        organization: "Kubernetes"
        subject_alt_name: "{{ groups['all'] | map('extract', hostvars, ['ansible_eth0','ipv4', 'address']) | map('regex_replace', '(^.*$)', 'IP:\\1') | join(',') }}\
          ,IP:{{ certs_and_config_kube_api_public_ip }}\
          ,IP:127.0.0.1\
          ,{{ certs_and_config_kube_api_additional_subject_alt_names_list | map('regex_replace', '(^.*$)', 'DNS:\\1') | join(',') }}"
      - name: "service-account"
        common_name: "service-accounts"
        organization: "Kubernetes"

- name: Set facts for nodes (kubelets)
  set_fact:
    k8s_nodes: "{{ (k8s_nodes | default([])) + [
        {
          'name': item,
          'common_name': 'system:node:' + item,
          'organization': 'system:nodes'
        }
      ] }}"
  with_inventory_hostnames:
    - all

- name: Combine facts to create components
  set_fact:
    components: "{{ k8s_nodes + k8s_services }}"

- name: Create private key for CA
  community.crypto.openssl_privatekey:
    path: ../certs/ca.key
    mode: 0600
  register: ca_key

- name: Create a sign request for root cert
  community.crypto.openssl_csr:
    path: ../certs/ca.csr
    privatekey_path: "{{ ca_key.filename }}"
    common_name: "Kubernetes"
    basic_constraints:
      - 'CA:TRUE'
    basic_constraints_critical: yes
    key_usage:
      - "keyCertSign"
      - "digitalSignature"
      - "keyEncipherment"
      - "dataEncipherment"
      - "cRLSign"
    extended_key_usage:
      - "serverAuth"
      - "clientAuth"
      - "codeSigning"
  register: ca_csr

- name: Sign the root cert
  community.crypto.x509_certificate:
    path: ../certs/ca.crt
    csr_path: "{{ ca_csr.filename }}"
    privatekey_path: "{{ ca_key.filename }}"
    selfsigned_not_after: "+3650d"
    provider: selfsigned
    return_content: true
  register: ca_crt
  no_log: true

- name: Create private keys for components
  community.crypto.openssl_privatekey:
    path: ../certs/{{ item.name }}.key
    mode: 0600
    return_content: true
  register: keys
  loop: "{{ components }}"

- name: Create a CSR for components
  community.crypto.openssl_csr:
    path: ../certs/{{ item.name }}.csr
    privatekey_path: "{{ keys.results | selectattr('item.name', 'eq', item.name) | map(attribute='filename') | first }}"
    CN: "{{ item.common_name }}"
    O: "{{ item.organization }}"
    subjectAltName: "{{ item.subject_alt_name | d(omit) }}"
  register: csrs
  loop: "{{ components }}"

- name: Sign the CSR for components
  community.crypto.x509_certificate:
    path: ../certs/{{ item.name }}.crt
    csr_path: "{{ csrs.results | selectattr('item.name', 'eq', item.name) | map(attribute='filename') | first }}"
    privatekey_path: "{{ keys.results | selectattr('item.name', 'eq', item.name) | map(attribute='filename') | first }}"
    ownca_path: "{{ ca_crt.filename }}"
    ownca_privatekey_path: "{{ ca_key.filename }}"
    ownca_not_after: "+3650d"
    provider: ownca
    return_content: true
  register: certs
  loop: "{{ components }}"

- name: Create configuration for components
  template:
    src: templates/kubeconfig.j2
    dest: ../config/{{ item.name }}.kubeconfig
    mode: 0600
  loop: "{{ components }}"

- name: Create encryption config
  template:
    src: templates/encryption-config.yaml.j2
    dest: ../config/encryption-config.yaml
    mode: 0644
