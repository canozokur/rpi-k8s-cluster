---
- name: Ensure /usr/local/bin exists
  ansible.builtin.file:
    path: /usr/local/bin
    owner: root
    group: root
    mode: 0755
    state: directory

- name: Ensure etcd directories exists
  ansible.builtin.file:
    path: "{{ item }}"
    owner: root
    group: root
    mode: 0700
    state: directory
  loop:
    - /etc/etcd
    - /var/lib/etcd

- name: Download etcd tarball
  ansible.builtin.get_url:
    url: https://github.com/etcd-io/etcd/releases/download/{{ etcd_cluster_release }}/etcd-{{ etcd_cluster_release }}-linux-arm64.tar.gz
    dest: /tmp
    checksum: sha256:https://github.com/etcd-io/etcd/releases/download/{{ etcd_cluster_release }}/SHA256SUMS


- name: Extract etcd to /usr/local/bin
  ansible.builtin.unarchive:
    src: /tmp/etcd-{{ etcd_cluster_release }}-linux-arm64.tar.gz
    dest: /usr/local/bin
    extra_opts:
      - --strip=1
      - --wildcards
      - '*/etcd'
      - '*/etcdctl'
    remote_src: true

- name: Copy CA and k8s api certs to nodes
  ansible.builtin.copy:
    src: ../certs/{{ item.name }}
    dest: /etc/etcd/
    owner: root
    group: root
    mode: "{{ item.mode }}"
  loop:
    - name: ca.crt
      mode: '0644'
    - name: kube-api.key
      mode: '0600'
    - name: kube-api.crt
      mode: '0644'

- name: Create etcd systemd unit file
  template:
    src: templates/etcd.service.j2
    dest: /etc/systemd/system/etcd.service
    owner: root
    group: root
    mode: 0644
  register: etcd_cluster_unit_file

- name: Start etcd service
  ansible.builtin.systemd:
    name: etcd
    state: "{{ etcd_cluster_unit_file is changed | ternary('restarted', 'started') }}"
    daemon_reload: "{{ etcd_cluster_unit_file is changed | ternary(true, false) }}"
    enabled: true
